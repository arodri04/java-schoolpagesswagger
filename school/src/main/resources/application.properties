server.port=${PORT:2019}

#Feature that determines what happens when no accessors are found for a type
#(and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
spring.datasource.initialization-mode=always

# For h2 database
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=always

# For PostgreSQL
#spring.datasource.url=jdbc:postgresql://localhost:5432/ourcourses
#spring.datasource.username=postgres
#spring.datasource.password=${MYDBPASSWORD:password}
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://ec2-23-23-228-132.compute-1.amazonaws.com:5432/d4jn78m3qioh55?user=xqyphnjjcmnmez&password=7592375abf8fa61a95e129e0628b6b937a8dfd8e12a69af2f7dd9575ae570f53&sslmode=require}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:xqyphnjjcmnmez}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:7592375abf8fa61a95e129e0628b6b937a8dfd8e12a69af2f7dd9575ae570f53}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true




